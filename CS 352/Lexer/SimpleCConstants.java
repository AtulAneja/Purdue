/* Generated By:JavaCC: Do not edit this line. SimpleCConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPARENT = 10;
  /** RegularExpression Id. */
  int RPARENT = 11;
  /** RegularExpression Id. */
  int CHARSTARSTAR = 12;
  /** RegularExpression Id. */
  int CHARSTAR = 13;
  /** RegularExpression Id. */
  int LONGSTAR = 14;
  /** RegularExpression Id. */
  int LONG = 15;
  /** RegularExpression Id. */
  int VOID = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int ELSE = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int DO = 20;
  /** RegularExpression Id. */
  int FOR = 21;
  /** RegularExpression Id. */
  int CONTINUE = 22;
  /** RegularExpression Id. */
  int BREAK = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int LBRACE = 25;
  /** RegularExpression Id. */
  int RBRACE = 26;
  /** RegularExpression Id. */
  int LCURLY = 27;
  /** RegularExpression Id. */
  int RCURLY = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int EQUAL = 31;
  /** RegularExpression Id. */
  int AMPERSAND = 32;
  /** RegularExpression Id. */
  int OR = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int EQUALEQUAL = 35;
  /** RegularExpression Id. */
  int NOTEQUAL = 36;
  /** RegularExpression Id. */
  int LESS = 37;
  /** RegularExpression Id. */
  int GREAT = 38;
  /** RegularExpression Id. */
  int LESSEQUAL = 39;
  /** RegularExpression Id. */
  int GREATEQUAL = 40;
  /** RegularExpression Id. */
  int ADD = 41;
  /** RegularExpression Id. */
  int SUBTRACT = 42;
  /** RegularExpression Id. */
  int MULTIPLY = 43;
  /** RegularExpression Id. */
  int DIVIDE = 44;
  /** RegularExpression Id. */
  int PERCENT = 45;
  /** RegularExpression Id. */
  int DOUBLESTAR = 46;
  /** RegularExpression Id. */
  int DOUBLE = 47;
  /** RegularExpression Id. */
  int ID = 48;
  /** RegularExpression Id. */
  int CHAR_CONST = 49;
  /** RegularExpression Id. */
  int STRING_CONST = 50;
  /** RegularExpression Id. */
  int INTEGER_CONST = 51;
  /** RegularExpression Id. */
  int DOUBLE_CONST = 52;
  /** RegularExpression Id. */
  int PRINTING_CHAR = 53;
  /** RegularExpression Id. */
  int HEX_DIGIT = 54;
  /** RegularExpression Id. */
  int DIGIT = 55;
  /** RegularExpression Id. */
  int OCTAL = 56;
  /** RegularExpression Id. */
  int LETTER = 57;
  /** RegularExpression Id. */
  int OTHER_CHAR = 58;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"(\"",
    "\")\"",
    "\"char**\"",
    "\"char*\"",
    "\"long*\"",
    "\"long\"",
    "\"void\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"continue\"",
    "\"break\"",
    "\"return\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"&\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"double*\"",
    "\"double\"",
    "<ID>",
    "<CHAR_CONST>",
    "<STRING_CONST>",
    "<INTEGER_CONST>",
    "<DOUBLE_CONST>",
    "<PRINTING_CHAR>",
    "<HEX_DIGIT>",
    "<DIGIT>",
    "<OCTAL>",
    "<LETTER>",
    "<OTHER_CHAR>",
  };

}
